df$income <- factor(df$income)
df$f.gender <- factor(df$gender,labels = c("male","female"))
summary(df)
#round(prop.table(summary(df$vote)),2)
# Chunk 5
which(df=="") #no blanks found in the data
sapply(df, unique) # Check unique values for each attribute
sum(duplicated(df))
head(df[duplicated(df),])
df$error = 0
number_of_errors_per_attribute = c(rep(0, 6));number_of_errors_per_attribute
summary(df)
# Chunk 6
#attributes_report  <- data.frame(attributes = c(names(df)))
#summary(attributes_report)
#names(attributes_report)
number_of_outliers_per_attribute = c()
df$outlier = 0
# vote
prop.table(table(df$vote))
df[which(df$vote == "AfD"),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$vote == "AfD")))
# egoposition_immigration
prop.table(table(df$egoposition_immigration))
df[which(df$egoposition_immigration == 8),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$egoposition_immigration == 8)))
#ostwest
prop.table(table(df$f.ostwest))
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, 0)
# political_interest
prop.table(table(df$political_interest))
df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$political_interest == 0)))
# income
prop.table(table(df$income))
df[which(df$income == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$income == 0)))
# gender
prop.table(table(df$f.gender))
#df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute,0)
str(number_of_outliers_per_attribute)
# Chunk 7
#sapply(gles, class)
# Chunk 8
#library(chemometrics)
#res.out<-Moutlier(gles[,c(2,3,4,5,6)],quantile=0.975)
#str(res.out)
#res.out$cutoff
## [1] 4.297305
#which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
## 1048
## 1045
#plot( res.out$md, res.out$rd )
#abline(h=res.out$cutoff, col="red")
#abline(v=res.out$cutoff, col="red")
# Chunk 9
is.null(df) #no nulls in the data
number_of_na_per_attribute = c(rep(0, 6));number_of_na_per_attribute
df$na = 0
# Chunk 10
# per variabe
attributes_report  <- data.frame(attributes = c(names(df[,c(1:6)])), errors=number_of_errors_per_attribute, outliers=number_of_outliers_per_attribute, na=number_of_na_per_attribute)
print(attributes_report)
# per individual
individuals_report = df[,c("error","outlier", "na")]
print(individuals_report)
# Chunk 11
attributes_report$total <- attributes_report$error +  attributes_report$outlier + attributes_report$na
attributes_report
# Chunk 12
df <- df[,c(1:9)]
summary(df)
summary(df)
library(car)
boxplot(df[,c(1:2,4:5,7:8)])
plot(df[,c(1:2,4:5,7:8)])
round(prop.table(summary(df$vote)),2)
df$f.vote <- ''
df[which(df$vote=="AfD"),9] <- "right"
library(FactoMineR)
res.cat_f.vote <- catdes(df[,c(2,4,5,7:9)],num.var=6);res.cat_f.vote
set.seed(1310)
t <- sample(1:nrow(df),round(0.66*nrow(df),0)) # rows for training
train <- df[t,]  # working/training set
test <- df[-t,]  # testing set
col(train)
m0 <- multinom(f.vote ~ 1, data = train) #we start from the null model
sapply(df, class)
df <- df[,c(1:8)] # Remove attributes that are used for the report
summary(df)
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 2
#load libraries
library("nnet")
#load data
data("gles", package = "MNLpred")
df <- gles
summary(df)
# Chunk 3
sapply(df, class)
# Chunk 4
# Transform variables to factors
#df$vote <- factor(df$vote)
#df$egoposition_immigration <- factor(df$egoposition_immigration, ordered = TRUE)
#df$ostwest <- factor(ifelse(df$ostwest==0,"No","Yes"))
#df$political_interest <- factor(df$political_interest, ordered=TRUE)
#df$income <- factor(df$income, ordered=TRUE)
#df$gender <- factor(ifelse(df$gender==0,"Male","Female"))
df$vote <- factor(df$vote)
df$egoposition_immigration <- factor(df$egoposition_immigration)
df$f.ostwest <- factor(df$ostwest, labels = c("west","east"))
df$political_interest <- factor(df$political_interest)
df$income <- factor(df$income)
df$f.gender <- factor(df$gender,labels = c("male","female"))
summary(df)
#round(prop.table(summary(df$vote)),2)
# Chunk 5
which(df=="") #no blanks found in the data
sapply(df, unique) # Check unique values for each attribute
sum(duplicated(df))
head(df[duplicated(df),])
df$error = 0
number_of_errors_per_attribute = c(rep(0, 6));number_of_errors_per_attribute
summary(df)
# Chunk 6
#attributes_report  <- data.frame(attributes = c(names(df)))
#summary(attributes_report)
#names(attributes_report)
number_of_outliers_per_attribute = c()
df$outlier = 0
# vote
prop.table(table(df$vote))
df[which(df$vote == "AfD"),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$vote == "AfD")))
# egoposition_immigration
prop.table(table(df$egoposition_immigration))
df[which(df$egoposition_immigration == 8),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$egoposition_immigration == 8)))
#ostwest
prop.table(table(df$f.ostwest))
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, 0)
# political_interest
prop.table(table(df$political_interest))
df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$political_interest == 0)))
# income
prop.table(table(df$income))
df[which(df$income == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$income == 0)))
# gender
prop.table(table(df$f.gender))
#df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute,0)
str(number_of_outliers_per_attribute)
# Chunk 7
#sapply(gles, class)
# Chunk 8
#library(chemometrics)
#res.out<-Moutlier(gles[,c(2,3,4,5,6)],quantile=0.975)
#str(res.out)
#res.out$cutoff
## [1] 4.297305
#which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
## 1048
## 1045
#plot( res.out$md, res.out$rd )
#abline(h=res.out$cutoff, col="red")
#abline(v=res.out$cutoff, col="red")
# Chunk 9
is.null(df) #no nulls in the data
number_of_na_per_attribute = c(rep(0, 6));number_of_na_per_attribute
df$na = 0
# Chunk 10
# per variabe
attributes_report  <- data.frame(attributes = c(names(df[,c(1:6)])), errors=number_of_errors_per_attribute, outliers=number_of_outliers_per_attribute, na=number_of_na_per_attribute)
print(attributes_report)
# per individual
individuals_report = df[,c("error","outlier", "na")]
print(individuals_report)
individuals_report$total = individuals_report$error + individuals_report$outlier + individuals_report$na
print(individuals_report)
individuals_report = individuals_report[order(individuals_report$total,decreasing = TRUE),]
print(individuals_report)
attributes_report
setwd("~/Desktop/master/Assigment2/SIM-Assignment2")
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 2
#load libraries
library("nnet")
#load data
data("gles", package = "MNLpred")
df <- gles
summary(df)
# Chunk 3
sapply(df, class)
# Chunk 4
# Transform variables to factors
#df$vote <- factor(df$vote)
#df$egoposition_immigration <- factor(df$egoposition_immigration, ordered = TRUE)
#df$ostwest <- factor(ifelse(df$ostwest==0,"No","Yes"))
#df$political_interest <- factor(df$political_interest, ordered=TRUE)
#df$income <- factor(df$income, ordered=TRUE)
#df$gender <- factor(ifelse(df$gender==0,"Male","Female"))
df$vote <- factor(df$vote)
df$egoposition_immigration <- factor(df$egoposition_immigration)
df$f.ostwest <- factor(df$ostwest, labels = c("west","east"))
df$political_interest <- factor(df$political_interest)
df$income <- factor(df$income)
df$f.gender <- factor(df$gender,labels = c("male","female"))
summary(df)
#round(prop.table(summary(df$vote)),2)
# Chunk 5
which(df=="") #no blanks found in the data
sapply(df, unique) # Check unique values for each attribute
sum(duplicated(df))
head(df[duplicated(df),])
df$error = 0
number_of_errors_per_attribute = c(rep(0, 6));number_of_errors_per_attribute
summary(df)
# Chunk 6
#attributes_report  <- data.frame(attributes = c(names(df)))
#summary(attributes_report)
#names(attributes_report)
number_of_outliers_per_attribute = c()
df$outlier = 0
# vote
prop.table(table(df$vote))
df[which(df$vote == "AfD"),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$vote == "AfD")))
# egoposition_immigration
prop.table(table(df$egoposition_immigration))
df[which(df$egoposition_immigration == 8),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$egoposition_immigration == 8)))
#ostwest
prop.table(table(df$f.ostwest))
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, 0)
# political_interest
prop.table(table(df$political_interest))
df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$political_interest == 0)))
# income
prop.table(table(df$income))
df[which(df$income == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$income == 0)))
# gender
prop.table(table(df$f.gender))
#df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute,0)
str(number_of_outliers_per_attribute)
# Chunk 7
#sapply(gles, class)
# Chunk 8
#library(chemometrics)
#res.out<-Moutlier(gles[,c(2,3,4,5,6)],quantile=0.975)
#str(res.out)
#res.out$cutoff
## [1] 4.297305
#which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
## 1048
## 1045
#plot( res.out$md, res.out$rd )
#abline(h=res.out$cutoff, col="red")
#abline(v=res.out$cutoff, col="red")
# Chunk 9
is.null(df) #no nulls in the data
number_of_na_per_attribute = c(rep(0, 6));number_of_na_per_attribute
df$na = 0
# Chunk 10
# per variabe
attributes_report  <- data.frame(attributes = c(names(df[,c(1:6)])), errors=number_of_errors_per_attribute, outliers=number_of_outliers_per_attribute, na=number_of_na_per_attribute)
print(attributes_report)
# per individual
individuals_report = df[,c("error","outlier", "na")]
# Chunk 11
attributes_report$total <- attributes_report$error +  attributes_report$outlier + attributes_report$na
attributes_report
# Chunk 12
individuals_report$total = individuals_report$error + individuals_report$outlier + individuals_report$na
individuals_report = individuals_report[order(individuals_report$total,decreasing = TRUE),
print(individuals_report)
# Chunk 13
df <- df[,c(1:8)] # Remove attributes that are used for the report
print(attributes_report)
individuals_report = df[,c("error","outlier", "na")]
individuals_report$total = individuals_report$error + individuals_report$outlier + individuals_report$na
Let's compute the correlation of variables in terms of errors
```{r}
attributes_report$total <- attributes_report$error +  attributes_report$outlier + attributes_report$na
individuals_report = df[,c("error","outlier", "na")]
print(individuals_report)
individuals_report = individuals_report[order(individuals_report$total,decreasing = TRUE),)
individuals_report$total = individuals_report$error + individuals_report$outlier + individuals_report$na
print(individuals_report)
```
As we can see in general, data quality is pretty good. The only thing it might need is to group some levels in further iterations
```{r}
df <- df[,c(1:8)] # Remove attributes that are used for the report
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 2
#load libraries
library("nnet")
#load data
data("gles", package = "MNLpred")
df <- gles
summary(df)
# Chunk 3
sapply(df, class)
# Chunk 4
# Transform variables to factors
#df$vote <- factor(df$vote)
#df$egoposition_immigration <- factor(df$egoposition_immigration, ordered = TRUE)
#df$ostwest <- factor(ifelse(df$ostwest==0,"No","Yes"))
#df$political_interest <- factor(df$political_interest, ordered=TRUE)
#df$income <- factor(df$income, ordered=TRUE)
#df$gender <- factor(ifelse(df$gender==0,"Male","Female"))
df$vote <- factor(df$vote)
df$egoposition_immigration <- factor(df$egoposition_immigration)
df$f.ostwest <- factor(df$ostwest, labels = c("west","east"))
df$political_interest <- factor(df$political_interest)
df$income <- factor(df$income)
df$f.gender <- factor(df$gender,labels = c("male","female"))
summary(df)
#round(prop.table(summary(df$vote)),2)
# Chunk 5
which(df=="") #no blanks found in the data
sapply(df, unique) # Check unique values for each attribute
sum(duplicated(df))
head(df[duplicated(df),])
df$error = 0
number_of_errors_per_attribute = c(rep(0, 6));number_of_errors_per_attribute
summary(df)
# Chunk 6
#attributes_report  <- data.frame(attributes = c(names(df)))
#summary(attributes_report)
#names(attributes_report)
number_of_outliers_per_attribute = c()
df$outlier = 0
# vote
prop.table(table(df$vote))
df[which(df$vote == "AfD"),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$vote == "AfD")))
# egoposition_immigration
prop.table(table(df$egoposition_immigration))
df[which(df$egoposition_immigration == 8),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$egoposition_immigration == 8)))
#ostwest
prop.table(table(df$f.ostwest))
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, 0)
# political_interest
prop.table(table(df$political_interest))
df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$political_interest == 0)))
# income
prop.table(table(df$income))
df[which(df$income == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$income == 0)))
# gender
prop.table(table(df$f.gender))
#df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute,0)
str(number_of_outliers_per_attribute)
# Chunk 7
#sapply(gles, class)
# Chunk 8
#library(chemometrics)
#res.out<-Moutlier(gles[,c(2,3,4,5,6)],quantile=0.975)
#str(res.out)
#res.out$cutoff
## [1] 4.297305
#which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
## 1048
## 1045
#plot( res.out$md, res.out$rd )
#abline(h=res.out$cutoff, col="red")
#abline(v=res.out$cutoff, col="red")
# Chunk 9
is.null(df) #no nulls in the data
number_of_na_per_attribute = c(rep(0, 6));number_of_na_per_attribute
df$na = 0
# per variabe
attributes_report  <- data.frame(attributes = c(names(df[,c(1:6)])), errors=number_of_errors_per_attribute, outliers=number_of_outliers_per_attribute, na=number_of_na_per_attribute)
print(attributes_report)
# per individual
individuals_report = df[,c("error","outlier", "na")]
print(individuals_report)
attributes_report$total <- attributes_report$error +  attributes_report$outlier + attributes_report$na
attributes_report
individuals_report = individuals_report[order(individuals_report$total,decreasing = TRUE),)
individuals_report$total = individuals_report$error + individuals_report$outlier + individuals_report$na
print(individuals_report)
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 2
#load libraries
library("nnet")
#load data
data("gles", package = "MNLpred")
df <- gles
summary(df)
# Chunk 3
sapply(df, class)
# Chunk 4
# Transform variables to factors
#df$vote <- factor(df$vote)
#df$egoposition_immigration <- factor(df$egoposition_immigration, ordered = TRUE)
#df$ostwest <- factor(ifelse(df$ostwest==0,"No","Yes"))
#df$political_interest <- factor(df$political_interest, ordered=TRUE)
#df$income <- factor(df$income, ordered=TRUE)
#df$gender <- factor(ifelse(df$gender==0,"Male","Female"))
df$vote <- factor(df$vote)
df$egoposition_immigration <- factor(df$egoposition_immigration)
df$f.ostwest <- factor(df$ostwest, labels = c("west","east"))
df$political_interest <- factor(df$political_interest)
df$income <- factor(df$income)
df$f.gender <- factor(df$gender,labels = c("male","female"))
summary(df)
#round(prop.table(summary(df$vote)),2)
# Chunk 5
which(df=="") #no blanks found in the data
sapply(df, unique) # Check unique values for each attribute
sum(duplicated(df))
head(df[duplicated(df),])
df$error = 0
number_of_errors_per_attribute = c(rep(0, 6));number_of_errors_per_attribute
summary(df)
# Chunk 6
#attributes_report  <- data.frame(attributes = c(names(df)))
#summary(attributes_report)
#names(attributes_report)
number_of_outliers_per_attribute = c()
df$outlier = 0
# vote
prop.table(table(df$vote))
df[which(df$vote == "AfD"),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$vote == "AfD")))
# egoposition_immigration
prop.table(table(df$egoposition_immigration))
df[which(df$egoposition_immigration == 8),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$egoposition_immigration == 8)))
#ostwest
prop.table(table(df$f.ostwest))
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, 0)
# political_interest
prop.table(table(df$political_interest))
df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$political_interest == 0)))
# income
prop.table(table(df$income))
df[which(df$income == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute, length(which(df$income == 0)))
# gender
prop.table(table(df$f.gender))
#df[which(df$political_interest == 0),"outlier"] <- 1
number_of_outliers_per_attribute <- append(number_of_outliers_per_attribute,0)
str(number_of_outliers_per_attribute)
# Chunk 7
#sapply(gles, class)
# Chunk 8
#library(chemometrics)
#res.out<-Moutlier(gles[,c(2,3,4,5,6)],quantile=0.975)
#str(res.out)
#res.out$cutoff
## [1] 4.297305
#which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
## 1048
## 1045
#plot( res.out$md, res.out$rd )
#abline(h=res.out$cutoff, col="red")
#abline(v=res.out$cutoff, col="red")
# Chunk 9
is.null(df) #no nulls in the data
number_of_na_per_attribute = c(rep(0, 6));number_of_na_per_attribute
df$na = 0
# Chunk 10
# per variabe
attributes_report  <- data.frame(attributes = c(names(df[,c(1:6)])), errors=number_of_errors_per_attribute, outliers=number_of_outliers_per_attribute, na=number_of_na_per_attribute)
print(attributes_report)
# per individual
individuals_report = df[,c("error","outlier", "na")]
print(individuals_report)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
